{"version":3,"sources":["components/Header/Header.js","config.js","components/HeroImage/HeroImage.js","components/SearchBar/SearchBar.js","components/FourColGrid/FourColGrid.js","components/MovieThumb/MovieThumb.js","components/LoadMoreBtn/LoadMoreBtn.js","components/Spinner/Spinner.js","components/Home/Home.js","components/NotFound/NotFound.js","components/Navigation/Navigation.js","components/MovieInfo/MovieInfo.js","helpers.js","components/MovieInfoBar/MovieInfoBar.js","components/Actor/Actor.js","components/Movie/Movie.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","src","alt","API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","_ref","image","title","text","style","background","concat","SearchBar","searchItems","index_es","icon","faSearch","size","type","placeholder","onChange","FourColGrid","header","isLoading","children","map","element","i","key","MovieThumb","clickable","movieId","movieName","pathname","LoadMoreBtn","onClick","Spinner","Home","_useState","useState","_useState2","Object","slicedToArray","movies","setMovies","_useState3","_useState4","heroImage","setHeroImage","_useState5","_useState6","setIsLoading","_useState7","_useState8","currentPage","setCurrentPage","_useState9","_useState10","totalPages","setTotalPages","_useState11","_useState12","search","setSearch","useEffect","endpoint","getMovies","asyncToGenerator","regenerator_default","mark","_callee","data","popularMovies","wrap","_context","prev","next","axios","sent","toConsumableArray","results","page","console","log","total_pages","t0","stop","_x","apply","this","arguments","components_HeroImage_HeroImage","backdrop_path","original_title","overview","components_SearchBar_SearchBar","e","searchTerm","target","value","components_FourColGrid_FourColGrid","movie","components_MovieThumb_MovieThumb","poster_path","id","components_Spinner_Spinner","components_LoadMoreBtn_LoadMoreBtn","NotFound","Navigation","MovieInfo","directors","min","max","optimum","low","high","vote_average","length","name","faFilm","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","budget","revenue","faClock","hours","Math","floor","mins","calcTime","faMoneyBill","faTicketAlt","Actor","actor","profile_path","character","Movie","match","location","setMovie","actors","setActors","setDirectors","params","fetchItems","_ref2","_endpoint","credits","_directors","status_code","crew","filter","member","job","cast","components_Navigation_Navigation","components_MovieInfo_MovieInfo","components_MovieInfoBar_MovieInfoBar","runtime","components_Actor_Actor","library","add","App","basename","Fragment","components_Header_Header","react_router","path","component","exact","notFound","Boolean","window","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9bd8e1b9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n\r\n\r\n    return (\r\n        <div className='rmdb-header'>\r\n            <h1 className='rmdb-header-content'>\r\n            <Link to='/'>\r\n                <img className='rmdb-logo' src='./images/reactMovie_logo.png' alt='rmdb Logo'/>\r\n            </Link>\r\n                <img className='rmdb-tmdb-logo' src='./images/tmdb_logo.png' alt='tmdb-logo'></img>\r\n            </h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '701cd5c966b070f217206def9a6e6f06';\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n}","import React from 'react';\r\nimport './HeroImage.css';\r\n\r\nconst HeroImage = ({ image, title, text }) => {\r\n    return (\r\n        <div className='rmdb-heroimage'\r\n            style={{\r\n                background: `linear-gradient(to bottom,\r\n            rgba(0,0,0,0) 39%,\r\n            rgba(0,0,0,0) 41%, \r\n            rgba(0,0,0,0.65) 100%),\r\n            url('${image}'), #1c1c1c`\r\n            }}>\r\n\r\n            <div className='rmdb-heroimage-content'>\r\n                <div className='rmdb-heroimage-text'>\r\n                    <h1>{title}</h1>\r\n                    <p>{text}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HeroImage;","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\nimport './SearchBar.css';\r\n\r\nconst SearchBar = ({ searchItems }) => {\r\n    return (\r\n        <div className='rmdb-searchbar'>\r\n            <div className='rmdb-searchbar-content'>\r\n                <FontAwesomeIcon className='rmdb-fa-search' icon={faSearch} size='2x'/>\r\n                <input\r\n                    type='text'\r\n                    className='rmdb-searchbar-input'\r\n                    placeholder='Search'\r\n                    onChange={searchItems}\r\n                    />\r\n                </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FourColGrid.css';\r\n\r\nconst FourColGrid = ({ header, isLoading, children }) => {\r\n    const renderElements = () => {\r\n        const gridElements = children.map((element, i) => (\r\n            <div key={i} className='rmdb-grid-element'>\r\n                {element}\r\n            </div>\r\n            ))\r\n        return gridElements;\r\n    }\r\n\r\n    return (\r\n        <div className='rmdb-grid'>\r\n            {header && !isLoading ? <h1>{header}</h1> : null}\r\n            <div className='rmdb-grid-content'>\r\n                {renderElements()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nFourColGrid.propTypes = {\r\n    header: PropTypes.string,\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default FourColGrid;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieThumb.css';\r\n\r\nconst MovieThumb = ({ image, clickable, movieId, movieName }) => {\r\n    return (\r\n        <div className='rmdb-moviethumb'>\r\n        {clickable ? \r\n            <Link to={{ pathname: `/${movieId}`, movieName:`${movieName}` }}>\r\n                <img src={image} alt='Movie Thumb'/> \r\n            </Link>\r\n            : <img src={image} alt='Movie Thumb'/> }\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nMovieThumb.propTypes = {\r\n    image: PropTypes.string,\r\n    movieId: PropTypes.number,\r\n    movieName: PropTypes.string\r\n};\r\n\r\nexport default MovieThumb;","import React from 'react';\r\nimport './LoadMoreBtn.css';\r\n\r\nconst LoadMoreBtn = ({ onClick, text }) => {\r\n    return (\r\n        <div className='rmdb-loadmorebtn' onClick={onClick}>\r\n            <p>{text}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadMoreBtn;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className='loader'>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;","import React, { useState, useEffect } from 'react'\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\r\nimport HeroImage from '../HeroImage/HeroImage';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport FourColGrid from '../FourColGrid/FourColGrid';\r\nimport MovieThumb from '../MovieThumb/MovieThumb';\r\nimport LoadMoreBtn from '../LoadMoreBtn/LoadMoreBtn';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport axios from 'axios';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [heroImage, setHeroImage] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [search, setSearch] = useState('');\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n        getMovies(endpoint);\r\n    }, []);\r\n    \r\n    \r\n    const getMovies = async (data) => {\r\n        try {\r\n            const popularMovies = await axios(data);\r\n            \r\n            setMovies([...movies]);\r\n            setHeroImage(heroImage || popularMovies.data.results[0]);\r\n            setIsLoading(false);\r\n            setCurrentPage(popularMovies.data.page);\r\n            console.log(popularMovies);\r\n            setTotalPages(popularMovies.data.total_pages);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    const loadMoreItems = () => {\r\n        let endpoint = '';\r\n        setIsLoading(true);\r\n\r\n        if (search === '') {\r\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage + 1}`;\r\n        } else {\r\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${search}&page=${currentPage + 1}`;\r\n                        \r\n        }\r\n        getMovies(endpoint);\r\n    };\r\n\r\n\r\n    const searchItems = (e) => {\r\n        const searchTerm = e.target.value;\r\n        console.log(searchTerm);\r\n        let endpoint = '';\r\n        setMovies([]);\r\n        setIsLoading(true);\r\n        setSearch(searchTerm);\r\n\r\n        if(searchTerm === '') {\r\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}$language=en-US&page=${currentPage + 1}`;\r\n\r\n        }else {\r\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n        }\r\n\r\n        getMovies(endpoint);\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='rmdb-home'>\r\n        {heroImage ?\r\n        <div>\r\n        <HeroImage  \r\n            image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\r\n            title={heroImage.original_title}\r\n            text={heroImage.overview}\r\n        /> \r\n        <SearchBar searchItems={searchItems}/> \r\n\r\n        </div> : null }\r\n            <div className='rmdb-home-grid'>\r\n                <FourColGrid \r\n                    header={search ? 'Search Result' : 'Popular Movies'}\r\n                    isLoading={isLoading}\r\n                >\r\n                    {movies.map((movie, i) => {\r\n                        return <MovieThumb \r\n                            key={i}\r\n                            clickable={true}\r\n                            image={movie.poster_path \r\n                            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                            : './images/no_image.jpg'}\r\n                            movieId={movie.id}\r\n                            movieName={movie.original_title}\r\n                        />\r\n                    })}\r\n               </FourColGrid>\r\n               {isLoading ? <Spinner /> : null}\r\n               {(currentPage <= totalPages && !isLoading) \r\n                ? <LoadMoreBtn text={'Load More'} onClick={loadMoreItems}/>\r\n                : null}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>Oooops this page doesn't exist</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({ movie }) => {\r\n    return (\r\n        <div className='rmdb-navigation'>\r\n            <div className='rmdb-navigation-content'>\r\n                <Link to='/'>\r\n                    <p>Home</p>\r\n                </Link>\r\n                <p></p>\r\n                <p>{movie}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFilm } from '@fortawesome/free-solid-svg-icons'\r\nimport MovieThumb from '../MovieThumb/MovieThumb';\r\nimport './MovieInfo.css';\r\n\r\n\r\nconst MovieInfo = ({ movie, directors }) => (\r\n    <div className=\"rmdb-movieinfo\"\r\n        style={{\r\n            background: movie.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${movie.backdrop_path}')` : '#000'\r\n        }}\r\n    >\r\n        <div className=\"rmdb-movieinfo-content\">\r\n            <div className=\"rmdb-movieinfo-thumb\">\r\n                <MovieThumb\r\n                    image={movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : './images/no_image.jpg'}\r\n                    clickable={false}\r\n                />\r\n            </div>\r\n            <div className=\"rmdb-movieinfo-text\">\r\n                <h1>{movie.title}</h1>\r\n                <h3>PLOT</h3>\r\n                <p>{movie.overview}</p>\r\n                <h3>IMDB RATING</h3>\r\n                <div className=\"rmdb-rating\">\r\n                    <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={movie.vote_average * 10}></meter>\r\n                    <p className=\"rmdb-score\">{movie.vote_average}</p>\r\n                </div>\r\n                {directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\r\n                {directors.map((element, i) => {\r\n                    return <p key={i} className=\"rmdb-director\">{element.name}</p>\r\n                })}\r\n            </div>\r\n            <FontAwesomeIcon className=\"fa-film\" name=\"film\" size=\"5x\" icon={faFilm}/>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default MovieInfo;","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n// Convert a number to money formatting\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from 'react';\r\nimport { calcTime, convertMoney } from '../../helpers';\r\nimport './MovieInfoBar.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faClock, faMoneyBill, faTicketAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst MovieInfoBar = ({ time, budget, revenue }) => {\r\n    return (\r\n        <div className='rmdb-movieinfobar'>\r\n            <div className='rmdb-movieinfobar-content'>\r\n                <div className='rmdb-movieinfobar-content-col'>\r\n                    <FontAwesomeIcon className='fa-time' name='clock-o' icon={faClock} size='2x' />\r\n                    <span className='rmdb-movieinfobar-info'>Running time: {calcTime(time)}</span>\r\n                </div>\r\n                <div className='rmdb-movieinfobar-content-col'>\r\n                    <FontAwesomeIcon className='fa-budget' name='money' icon={faMoneyBill} size='2x'/>\r\n                    <span className='rmdb-movieinfobar-info'>Budget: {convertMoney(budget)}</span>\r\n                </div>\r\n                <div className='rmdb-movieinfobar-content-col'>\r\n                    <FontAwesomeIcon className='fa-revenue' name='ticket' icon={faTicketAlt} size='2x'/>\r\n                    <span className='rmdb-movieinfobar-info'>revenue: {convertMoney(revenue)}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieInfoBar;","import React from 'react';\r\nimport { IMAGE_BASE_URL } from '../../config';\r\nimport './Actor.css';\r\n\r\nconst Actor = ({ actor }) => {\r\n    const POSTER_SIZE = 'w154';\r\n    return (\r\n        <div className='rmdb-actor'>\r\n            <img src={actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n            : './images/no_image.jpg'}\r\n            alt='actorthumb'></img>\r\n            <span className='rmdb-actor-name'>{actor.name}</span>\r\n            <span className='rmdb-actor-character'>{actor.character}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Actor;","import React, { useState, useEffect } from 'react';\r\nimport { API_URL, API_KEY } from '../../config';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport MovieInfo from '../MovieInfo/MovieInfo';\r\nimport MovieInfoBar from '../MovieInfoBar/MovieInfoBar';\r\nimport FourColGrid from '../FourColGrid/FourColGrid';\r\nimport Actor from '../Actor/Actor';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport axios from 'axios';\r\nimport './Movie.css';\r\n\r\nconst Movie = ({ match, location }) => {\r\n    const [movie, setMovie] = useState();\r\n    const [ actors, setActors ] = useState(null);\r\n    const [ directors, setDirectors ] = useState([]);\r\n    const [ isLoading, setIsLoading ] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n\r\n        const endpoint = `${API_URL}movie/${match.params.movieId}?api_key=${API_KEY}&language=en-US`;\r\n        fetchItems(endpoint);\r\n    }, [])\r\n\r\n    \r\n    const fetchItems = async (endpoint) => {\r\n        const data = await axios(endpoint);\r\n        \r\n        if(data.status_code) {\r\n            setIsLoading(false);\r\n        }else {\r\n            setMovie(data);\r\n            const endpoint = `${API_URL}movie/${match.params.movieId}/credits?api_key=${API_KEY}`;\r\n            const credits = await axios(endpoint);\r\n            const directors = credits.data.crew.filter((member) => member.job === 'Director');\r\n            setActors(credits.data.cast);\r\n            setDirectors(directors);\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='rmdb-movie'>\r\n            {movie ? \r\n            <div>\r\n                <Navigation movie={location.movieName} />\r\n                <MovieInfo movie={movie.data} directors={directors} />\r\n                <MovieInfoBar time={movie.data.runtime} budget={movie.data.budget}  revenue={movie.data.revenue}/>\r\n            </div> : null}\r\n            {actors ? \r\n            <div className='rmdb-movie-grid'>\r\n                <FourColGrid header={'Actors'}>\r\n                    {actors.map((actor, i) => {\r\n                        return <Actor key={i} actor={actor} />\r\n                    })}\r\n               </FourColGrid>\r\n            </div> : ''}\r\n            {isLoading ? <Spinner /> : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Movie;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Header from './components/Header/Header';\r\nimport Home from './components/Home/Home';\r\nimport notFound from './components/NotFound/NotFound';\r\nimport Movie from './components/Movie/Movie';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faSearch, faFilm, faClock, faMoneyBill, faTicketAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faSearch, faFilm, faClock, faMoneyBill, faTicketAlt);\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter basename='/movie-app/'>\r\n            <React.Fragment>\r\n                <Header />\r\n                <Switch>\r\n                    <Route path='/' component={Home} exact/>\r\n                    <Route path='/:movieId' component={Movie} exact/>\r\n                    <Route component={notFound} />\r\n                </Switch>\r\n            </React.Fragment>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}